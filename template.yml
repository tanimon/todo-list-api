# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: ToDo list API server

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # The API Gateway resource
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      # Auth:
      #   DefaultAuthorizer: CognitoAuthorizer
      #   Authorizers:
      #     CognitoAuthorizer:
      #       UserPoolArn: !GetAtt CognitoUserPool.Arn

  # The Cognito User Pool resource
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: true

  # The Cognito User Pool Client resource
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: src/main.ts
  ToDoListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist
      Handler: main.handler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 512
      Description: A Lambda function for an entry point to the Nest application.
      Policies:
        # Give Lambda basic execution Permission to the Lambda function
        - AWSLambdaBasicExecutionRole
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY

Outputs:
  ToDoListApi:
    Description: 'API Gateway endpoint URL for Prod stage for ToDo list function'
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
  ToDoListFunction:
    Description: 'ToDo list Lambda Function ARN'
    Value: !GetAtt ToDoListFunction.Arn
  ToDoListFunctionIamRole:
    Description: 'Implicit IAM Role created for ToDo list function'
    Value: !GetAtt ToDoListFunctionRole.Arn
